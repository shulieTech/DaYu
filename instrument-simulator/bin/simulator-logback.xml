<?xml version="1.0" encoding="UTF-8" ?>
<configuration scan="true" scanPeriod="10000">

<!--    <appender name="SIMULATOR-FILE-APPENDER" class="com.shulie.instrument.simulator.dependencies.ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        <file>${SIMULATOR_LOG_PATH}/simulator.log</file>-->
<!--        <rollingPolicy class="com.shulie.instrument.simulator.dependencies.ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">-->
<!--            <fileNamePattern>${SIMULATOR_LOG_PATH}/simulator.%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>-->
<!--            <maxFileSize>100MB</maxFileSize>  &lt;!&ndash; 日志文件过大会使的编辑器打开非常慢，因此设置日志最大100MB &ndash;&gt;-->
<!--            <maxHistory>3</maxHistory>  &lt;!&ndash; 保存30天 &ndash;&gt;-->
<!--            <totalSizeCap>300MB</totalSizeCap>  &lt;!&ndash; 总日志大小 &ndash;&gt;-->
<!--        </rollingPolicy>-->
<!--        <encoder>-->
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss} %-5level %msg%n</pattern>-->
<!--            <charset>UTF-8</charset>-->
<!--        </encoder>-->
<!--    </appender>-->

    <appender name="SIMULATOR-FILE-APPENDER" class="com.shulie.instrument.simulator.dependencies.ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${SIMULATOR_LOG_PATH}/simulator.log</file>
        <rollingPolicy class="com.shulie.instrument.simulator.dependencies.ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${SIMULATOR_LOG_PATH}/simulator.%i.log</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>3</maxIndex>
        </rollingPolicy>
        <!--SizeBasedTriggeringPolicy 观察当前活动文件的大小，如果已经大于了指定的值，它会给 RollingFileAppender 发一个信号触发对当前活动文件的轮转 -->
        <triggeringPolicy class="com.shulie.instrument.simulator.dependencies.ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>100MB</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} %-5level %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="MOCK-APPENDER" class="com.shulie.instrument.simulator.dependencies.ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${SIMULATOR_LOG_PATH}/mock.log</file>
        <filter class="com.shulie.instrument.simulator.dependencies.ch.qos.logback.classic.filter.LevelFilter">
            <!--过滤 INFO-->
            <!--            <level>INFO</level>-->
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <rollingPolicy class="com.shulie.instrument.simulator.dependencies.ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${SIMULATOR_LOG_PATH}/mock.%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>  <!-- 日志文件过大会使的编辑器打开非常慢，因此设置日志最大100MB -->
            <maxHistory>3</maxHistory>  <!-- 保存30天 -->
            <totalSizeCap>300MB</totalSizeCap>  <!-- 总日志大小 -->
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} %-5level %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>


    <appender name="ERROR-APPENDER" class="com.shulie.instrument.simulator.core.logback.CustomerRollingFileAppender">
        <filter class="com.shulie.instrument.simulator.dependencies.ch.qos.logback.classic.filter.ThresholdFilter">
            <!--过滤 INFO-->
            <!--            <level>INFO</level>-->
            <level>ERROR</level>
        </filter>
        <file>${SIMULATOR_LOG_PATH}/simulator-error.log</file>
        <!--        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">-->
        <rollingPolicy class="com.shulie.instrument.simulator.core.logback.CustomerSizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${SIMULATOR_LOG_PATH}/simulator-error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>50MB</maxFileSize>  <!-- 日志文件过大会使的编辑器打开非常慢，因此设置日志最大100MB -->
            <maxHistory>3</maxHistory>  <!-- 保存7天 -->
            <totalSizeCap>300MB</totalSizeCap>  <!-- 总日志大小 -->
        </rollingPolicy>
        <encoder>
<!--            <pattern>%msg%n</pattern>-->
            <pattern>%replace(%msg){"[\r\n]+", "nextline"}%nopex%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="TIME-CONSUMING-APPENDER" class="com.shulie.instrument.simulator.dependencies.ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${SIMULATOR_LOG_PATH}/time-consuming.log</file>
        <rollingPolicy class="com.shulie.instrument.simulator.dependencies.ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${SIMULATOR_LOG_PATH}/time-consuming.%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>  <!-- 日志文件过大会使的编辑器打开非常慢，因此设置日志最大100MB -->
            <maxHistory>3</maxHistory>  <!-- 保存30天 -->
            <totalSizeCap>1GB</totalSizeCap>  <!-- 总日志大小 -->
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} %-5level %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="ASYNC-TIME-CONSUMING-APPENDER" class="com.shulie.instrument.simulator.dependencies.ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="TIME-CONSUMING-APPENDER" />
    </appender>

    <appender name="ASYNC-SIMULATOR-FILE-APPENDER" class="com.shulie.instrument.simulator.dependencies.ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="SIMULATOR-FILE-APPENDER" />
    </appender>

    <appender name="ASYNC-MOCK-APPENDER" class="com.shulie.instrument.simulator.dependencies.ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="MOCK-APPENDER" />
    </appender>

    <appender name="ASYNC-ERROR-APPENDER" class="com.shulie.instrument.simulator.dependencies.ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="ERROR-APPENDER" />
    </appender>

    <logger name="MOCK-LOGGER" level="${SIMULATOR_LOG_LEVEL}">
        <appender-ref ref="ASYNC-MOCK-APPENDER"/>
    </logger>

    <logger name="TIME-CONSUMING-LOGGER" level="${SIMULATOR_LOG_LEVEL}" additivity="false">
        <appender-ref ref="ASYNC-TIME-CONSUMING-APPENDER"/>
    </logger>

<!--    <logger name="com.shulie.instrument.module.config.fetcher.config" level="warn" additivity="false"/>-->

    <root level="${SIMULATOR_LOG_LEVEL}">
        <appender-ref ref="ASYNC-SIMULATOR-FILE-APPENDER"/>
        <appender-ref ref="ASYNC-ERROR-APPENDER"/>
    </root>

</configuration>